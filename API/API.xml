<?xml version="1.0"?>
<doc>
    <assembly>
        <name>API</name>
    </assembly>
    <members>
        <member name="T:API.Controllers.AccountController">
            <summary>
            AccountController
            </summary>
        </member>
        <member name="M:API.Controllers.AccountController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="M:API.Controllers.AccountController.CreateSQL(Domain.Requests.AccountRequest)">
            <summary>
            Create new Account from SQL Query
            </summary>
            <param name="request"></param>
            <returns></returns>
            <exception cref="T:Application.Extensions.AppException"></exception>
        </member>
        <member name="M:API.Controllers.AccountController.GetPagingJson(Domain.Searchs.AccountSearch)">
            <summary>
            Get paging json
            </summary>
            <param name="baseSearch"></param>
            <returns></returns>
            <exception cref="T:Application.Extensions.AppException"></exception>
        </member>
        <member name="T:API.Controllers.Auths.AuthController">
            <summary>
            AuthController
            </summary>
        </member>
        <member name="M:API.Controllers.Auths.AuthController.#ctor(System.IServiceProvider,Microsoft.Extensions.Configuration.IConfiguration,AutoMapper.IMapper,Microsoft.Extensions.Logging.ILogger{API.Controllers.Auths.AuthController},Domain.Interfaces.IBackgroundNotiQueue,Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="configuration"></param>
            <param name="mapper"></param>
            <param name="logger"></param>
        </member>
        <member name="T:API.Controllers.Carts.OrderShopTempController">
            <summary>
            OrderShopTempController
            </summary>
        </member>
        <member name="M:API.Controllers.Carts.OrderShopTempController.#ctor(System.IServiceProvider)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:API.Controllers.Carts.OrderShopTempController.CreateAsync(Domain.Requests.CartRequests.OrderShopTempRequest)">
            <summary>
            Create
            </summary>
            <param name="request"></param>
            <returns></returns>
            <exception cref="T:Application.Extensions.AppException"></exception>
        </member>
        <member name="T:API.Controllers.ComissionController">
            <summary>
            Commission
            </summary>
        </member>
        <member name="M:API.Controllers.ComissionController.#ctor(System.IServiceProvider)">
            <summary>
            Contructor
            </summary>
        </member>
        <member name="T:API.Controllers.FeeConfigs.FeeBuyProductController">
            <summary>
            FeeBuyProductController
            </summary>
        </member>
        <member name="M:API.Controllers.FeeConfigs.FeeBuyProductController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.FeeConfigs.FeeCheckProductController">
            <summary>
            FeeCheckProductController
            </summary>
        </member>
        <member name="M:API.Controllers.FeeConfigs.FeeCheckProductController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.FeeConfigs.UserLevelController">
            <summary>
            UserLevelController
            </summary>
        </member>
        <member name="M:API.Controllers.FeeConfigs.UserLevelController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.Files.FileController">
            <summary>
            FileController
            </summary>
        </member>
        <member name="F:API.Controllers.Files.FileController._env">
            <summary>
            IWebHostEnvironment
            </summary>
        </member>
        <member name="M:API.Controllers.Files.FileController.#ctor(Microsoft.AspNetCore.Hosting.IWebHostEnvironment,Microsoft.AspNetCore.Http.IHttpContextAccessor)">
            <summary>
            Constructor
            </summary>
            <param name="env"></param>
            <param name="httpContextAccessor"></param>
        </member>
        <member name="M:API.Controllers.Files.FileController.UploadFile(Microsoft.AspNetCore.Http.IFormFile)">
            <summary>
            Upload single file
            </summary>
            <param name="file"></param>
            <returns></returns>
            <exception cref="T:Application.Extensions.AppException"></exception>
        </member>
        <member name="T:API.Controllers.Finances.BankController">
            <summary>
            BankController
            </summary>
        </member>
        <member name="M:API.Controllers.Finances.BankController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.Finances.RechargeController">
            <summary>
            RechargeController
            </summary>
        </member>
        <member name="M:API.Controllers.Finances.RechargeController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="M:API.Controllers.Finances.RechargeController.GetPagingJson(Domain.Searchs.FinanceSearchs.RechargeSearch)">
            <summary>
            Get paging json
            </summary>
            <param name="baseSearch"></param>
            <returns></returns>
            <exception cref="T:Application.Extensions.AppException"></exception>
        </member>
        <member name="T:API.Controllers.Finances.WithDrawController">
            <summary>
            WithDrawController
            </summary>
        </member>
        <member name="M:API.Controllers.Finances.WithDrawController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="M:API.Controllers.Finances.WithDrawController.GetPagingJson(Domain.Searchs.FinanceSearchs.RechargeSearch)">
            <summary>
            Get paging json
            </summary>
            <param name="baseSearch"></param>
            <returns></returns>
            <exception cref="T:Application.Extensions.AppException"></exception>
        </member>
        <member name="T:API.Controllers.HomePages.CustomerBenefitController">
            <summary>
            CustomerBenefit
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.CustomerBenefitController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="ServiceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.HomePages.CustomerTalkController">
            <summary>
            CustomerTalk
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.CustomerTalkController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="ServiceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.HomePages.MenuController">
            <summary>
            Service
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.MenuController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.HomePages.PostCategoryController">
            <summary>
            PostCategory
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.PostCategoryController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="M:API.Controllers.HomePages.PostCategoryController.GetPaging(Domain.Searchs.HomePageSearchs.HomeSearch)">
            <summary>
            Get all post category
            </summary>
            <returns></returns>
        </member>
        <member name="T:API.Controllers.HomePages.PostController">
            <summary>
            PostController
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.PostController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="M:API.Controllers.HomePages.PostController.GetPaging(Domain.Searchs.HomePageSearchs.PostSearch)">
            <summary>
            Get all post
            </summary>
            <returns></returns>
        </member>
        <member name="T:API.Controllers.HomePages.ServiceController">
            <summary>
            Service
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.ServiceController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.HomePages.StepController">
            <summary>
            Service
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.StepController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.HomePages.CNWarehouseController">
            <summary>
            CNWarehouseController
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.CNWarehouseController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.HomePages.ShippingTypeController">
            <summary>
            ShippingTypeController
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.ShippingTypeController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.HomePages.VNWarehouseController">
            <summary>
            VNWarehouseController
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.VNWarehouseController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.HomePages.VolumeFeeController">
            <summary>
            VolumeFeeController
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.VolumeFeeController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.HomePages.WeightFeeController">
            <summary>
            WeightFeeController
            </summary>
        </member>
        <member name="M:API.Controllers.HomePages.WeightFeeController.#ctor(System.IServiceProvider,Microsoft.Extensions.Logging.ILogger{Microsoft.AspNetCore.Mvc.ControllerBase},Microsoft.AspNetCore.Hosting.IWebHostEnvironment)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
            <param name="logger"></param>
            <param name="env"></param>
        </member>
        <member name="T:API.Controllers.SearchController">
            <summary>
            Search product
            </summary>
        </member>
        <member name="M:API.Controllers.SearchController.#ctor(Domain.Interfaces.ISearchService)">
            <summary>
            Constructor
            </summary>
            <param name="searchService"></param>
        </member>
        <member name="M:API.Controllers.SearchController.SearchContent(Domain.Searchs.SearchRequest)">
            <summary>
            Search
            </summary>
            <param name="searchRequest"></param>
            <returns></returns>
        </member>
        <member name="T:API.Controllers.WebConfigurationController">
            <summary>
            WebConfigurationController
            </summary>
        </member>
        <member name="M:API.Controllers.WebConfigurationController.#ctor(System.IServiceProvider)">
            <summary>
            Constructor
            </summary>
            <param name="serviceProvider"></param>
        </member>
        <member name="M:API.Controllers.WebConfigurationController.GetSingleAsync">
            <summary>
            Get single WebConfiguration
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.WebConfigurationController.GetCurrencyAsync">
            <summary>
            Get currency
            </summary>
            <returns></returns>
        </member>
        <member name="M:API.Controllers.WebConfigurationController.UpdateAsync(Domain.Requests.WebConfigurationRequest)">
            <summary>
            Get single WebConfiguration
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
